{"version":3,"sources":["Components/routes.ts","Components/Home/constants.ts","Components/Home/RenderPieChart.tsx","Components/Home/RenderpointsList.tsx","Components/Home/HomeModal.tsx","Components/Home/CardComponent.tsx","Components/Home/HomeComponent.tsx","redux/ActionCreators.tsx","redux/ActionTypes.ts","Components/Navigation/Navbar.tsx","Components/Admin/Admin.tsx","Components/Main.tsx","Components/Auth/Login.tsx","redux/reducers/User.tsx","App.tsx","redux/ConfigureStore.tsx","serviceWorker.ts","index.tsx"],"names":["domain","newPost_url","get_status_url","logout_url","fetchPosts_url","login_url","signup_url","pieChartColors","RenderPieChart","props","data","pointsBreakup","length","renderdata","map","stat","index","title","category","label","value","points","color","Fragment","labelStyle","fontSize","fontWeight","rounded","lineWidth","labelPosition","dataEntry","animate","radius","PointsList","Table","striped","borderless","hover","size","breakup","HomeModal","Modal","show","open","onHide","toggle","Header","closeButton","Title","post","company","Body","className","style","paddingLeft","name","class","padding","details","maxHeight","overflowY","CardComponent","useState","isModalOpen","toggleModal","Col","xs","sm","md","lg","Card","onClick","height","overflowX","Subtitle","Text","Button","Home","handleTypeSelect","key","e","state","posts","setState","internClass","target","text","handleFilter","tempArr","forEach","concat","minPoints","maxPoints","summation","obj","search_query","toLowerCase","includes","filteredPosts","handleChange","id","setMobileViewHeight","window","innerHeight","isLoading","isFilterModalOpen","debouncedFilter","_","debounce","fetch","then","res","json","console","log","desktopFilterBar","display","flexDirection","alignItems","flex","FormControl","onChange","this","placeholder","paddingRight","justifyContent","variant","Dropdown","Toggle","Menu","Item","eventKey","onSelect","k","mobileFilterBar","width","Form","Group","Label","marginTop","mobileBody","Row","desktopBody","searchBar","textAlign","Container","fluid","innerWidth","undefined","borderStyle","borderColor","borderWidth","borderRadius","margin","React","Component","loginAction","payload","type","NavComponent","connect","jwt_token","user","dispatch","logout","isLoggedIn","history","useHistory","handleSignOut","Axios","get","headers","withCredentials","handleNav","route","push","buttons_loggedIn","Nav","Link","buttons_notloggedIn","desktopNavbar","mobileNavbar","drop","Navbar","bg","sticky","marginBottom","Brand","to","Collapse","initialState","newCat","new_cat","new_points","AdminBasic","test","slice","handleCategoryAdd","parseInt","handleDropdown","handlesubmit","url","method","submission_success","catch","err","addCategory","marginLeft","marginRight","formFields","Control","as","rows","ele","disabled","Admin","Main","compose","login","token","withRouter","useEffect","error","location","pathname","exact","path","component","render","Login","isSignup","LoginBasic","username","usernameExists","password","passwordError","isSignupForm","badCredentials","action","axios","success","response","status","a","Accept","LoginButton","handleClick","SignupButton","PassConfirm_Field","minWidth","hidden","href","User","store","createStore","combineReducers","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a00bbdb0.chunk.js","sourcesContent":["const domain = 'http://localhost:3000';\r\n\r\nexport const newPost_url = `${domain}/internship/`;\r\nexport const get_status_url = `${domain}/`;\r\nexport const logout_url = `${domain}/admin/logout`;\r\nexport const fetchPosts_url = `${domain}/internship/`;\r\nexport const login_url = `${domain}/admin/login`;\r\nexport const signup_url = `${domain}/admin/signup`;","export const pieChartColors =[\"#E38627\", \"#C13C37\", \"#6A2135\", \"#99ffdd\"];","import React from 'react';\r\nimport {PieChart} from 'react-minimal-pie-chart';\r\nimport {pieChartColors} from './constants';\r\nimport { LabelRenderProps } from 'react-minimal-pie-chart/types/Label';\r\n\r\ninterface IProps {\r\n    pointsBreakup: [{category: string, points: number}] | [];\r\n}\r\n\r\nexport const RenderPieChart = (props: IProps) =>{\r\n    var data : [{category: string, points: number}] | null | [] = null;\r\n\r\n    if(props.pointsBreakup !== []){\r\n        data = props.pointsBreakup;\r\n    }\r\n\r\n    if(!data || data.length === 0){\r\n        return (\r\n            null\r\n        );\r\n    }\r\n    else{\r\n        const renderdata = data.map((stat: {category: string, points: number}, index) =>{\r\n            return {title: stat.category, label: stat.category, value: stat.points, color: pieChartColors[index % pieChartColors.length]};\r\n        });\r\n        const lol = [\"one\", \"two\", \"three\"]\r\n        return(\r\n            <React.Fragment>\r\n                <PieChart labelStyle={{fontSize:\"6px\", fontWeight:300}} rounded lineWidth={20} labelPosition={75} label={(data) => data.dataEntry.title} animate radius={40} data = {renderdata}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    \r\n    \r\n    \r\n}","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\ninterface IProps {\r\n    pointsBreakup: [{category: string, points: number}] | [];\r\n}\r\n\r\nexport const PointsList = (props: IProps) => {\r\n    if(props.pointsBreakup.length === 0){\r\n        return(\r\n            null\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <Table striped borderless hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Criteria</th>\r\n                        <th>Beta Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.pointsBreakup.map(breakup => {\r\n                        return(\r\n                            <tr>\r\n                                <td> {breakup.category} </td>\r\n                                <td> {breakup.points} </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { postType } from './HomeComponent';\r\nimport { RenderPieChart } from './RenderPieChart';\r\nimport { PointsList } from './RenderpointsList';\r\n\r\ninterface IProps {\r\n    open: boolean;\r\n    toggle: () => void;\r\n    post: postType;\r\n}\r\n\r\nexport const HomeModal = (props: IProps) =>{\r\n    return(\r\n        <Modal show={props.open} onHide={props.toggle}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    {props.post.company}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"row px-auto mx-auto\" style={{paddingLeft: \"16px\"}}>\r\n                    <h4> {props.post.name} - </h4> <h5 className=\"pt-1\" > {props.post.class} </h5>\r\n                </div>\r\n                <div className=\"row px-auto mx-auto\" style={{padding: \"16px\"}}>\r\n                    {props.post.details}\r\n                </div>\r\n                <div className=\"row\" style={{padding: \"10px\"}}>\r\n                    <div className=\"col-md-6 col-xs-12\">\r\n                        <RenderPieChart pointsBreakup={props.post.pointsBreakup}/>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-xs-12\" style={{maxHeight:\"250px\", overflowY:\"auto\"}}>\r\n                        <PointsList pointsBreakup={props.post.pointsBreakup} />\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Card, Col, Button } from 'react-bootstrap';\r\nimport { RenderPieChart } from './RenderPieChart';\r\nimport { PointsList } from './RenderpointsList'\r\nimport { HomeModal } from './HomeModal';\r\n\r\ntype postType = {name: string, company: string, details: string, class: string, pointsBreakup:[{category: string, points: number}]}\r\n\r\ninterface IProps {\r\n    data: postType;\r\n}\r\n\r\n\r\nexport const CardComponent = (props: IProps) => {\r\n    const [isModalOpen, toggleModal] = useState(false);\r\n\r\n    const text = (\r\n        <div className=\"row\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-11 p-0\">\r\n                {props.data.details}\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"row justify-content-center col-12 pt-2\">\r\n                <div className=\"col-4 justify-content-center pt-1\">\r\n                    <RenderPieChart pointsBreakup={props.data.pointsBreakup}/>\r\n                </div>\r\n                <div className=\"col-8 justify-content-center pt-1\" style={{overflowY:\"auto\", maxHeight:\"200px\"}}>\r\n                    <PointsList pointsBreakup={props.data.pointsBreakup} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    return(\r\n        <React.Fragment>\r\n            <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" >\r\n                    <Card onClick={() => toggleModal(true)} className=\"mx-auto my-1\">\r\n                        <Card.Body>\r\n                            <div style={{height:\"100px\", overflowX:\"auto\"}}>\r\n                                <Card.Title> {props.data.name} - {props.data.company} </Card.Title>\r\n                                <Card.Subtitle className=\"text-muted mb-2\"> {props.data.class} </Card.Subtitle>\r\n                            </div>\r\n                            <Card.Text><Button onClick={() => toggleModal(true)}>Apply</Button></Card.Text>\r\n                        </Card.Body>                                        \r\n                    </Card>\r\n            </Col>\r\n            <HomeModal open={isModalOpen} toggle={() => toggleModal(false)} post={props.data}/>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport {Container, Row, FormControl, Dropdown, Col, Button, Modal, Form} from 'react-bootstrap';\r\nimport {fetchPosts_url} from '../routes';\r\nimport {CardComponent} from './CardComponent';\r\nimport { Filter } from 'react-bootstrap-icons';\r\nimport _ from 'lodash';\r\n\r\nimport './styles.css';\r\n\r\nexport type postType = {name: string, company: string, details: string, class: string, pointsBreakup:[{category: string, points: number}]}\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    isLoading: boolean;\r\n    posts: postType[] | null;\r\n    filteredPosts: postType[] | null;\r\n    internClass: string;\r\n    minPoints: number | null;\r\n    maxPoints: number | null;\r\n    isFilterModalOpen: boolean;\r\n    search_query: string | null;\r\n    debouncedFilter: () => void;\r\n}\r\n\r\nexport class Home extends React.Component<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state={\r\n            isLoading: true,\r\n            posts: null,\r\n            filteredPosts: null,\r\n            internClass: \"Select\",\r\n            minPoints: null,\r\n            maxPoints: null,\r\n            isFilterModalOpen: false,\r\n            search_query: null,\r\n            debouncedFilter: _.debounce(this.handleFilter, 600)\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(fetchPosts_url).then((res) => {            \r\n            return res.json();\r\n        }).then(data => {\r\n            console.log(data);\r\n            this.setState({posts: data, isLoading: false, filteredPosts: data});\r\n        })\r\n    }\r\n\r\n    handleTypeSelect = (key: any, e:any) => {\r\n        if(this.state.posts && e && this.state.posts.length > 0){\r\n            //this.setState({ filteredPosts: this.state.posts?.filter((post) => post.class === e.target.text), internClass: e.target.text});\r\n            this.setState({internClass: e.target.text});\r\n        }\r\n        return;\r\n    }\r\n\r\n    handleFilter = () =>{\r\n        var posts = this.state.posts;\r\n        if(posts && this.state.internClass !== 'Select'){\r\n            let tempArr: postType[] = [];\r\n            posts.forEach(post =>{\r\n                if(post.class === this.state.internClass){\r\n                    tempArr = tempArr.concat(post);\r\n                }\r\n            });\r\n            posts = tempArr;\r\n        }\r\n        \r\n        if((this.state.minPoints || this.state.maxPoints) && posts){\r\n            let tempArr: postType[] = [];\r\n            posts.forEach((post) => {\r\n                if(post.pointsBreakup.length > 0){\r\n                    var summation = 0;\r\n                    post.pointsBreakup.forEach(obj => (summation = summation + obj.points));\r\n                    if(this.state.minPoints && this.state.maxPoints && summation >= this.state.minPoints && summation <= this.state.maxPoints && posts){\r\n                        return tempArr = tempArr.concat(post);\r\n                    }\r\n                    else if(this.state.minPoints && !this.state.maxPoints && summation >= this.state.minPoints && posts){\r\n                        return tempArr = tempArr.concat(post);\r\n                    }\r\n                    else if(this.state.maxPoints && !this.state.minPoints && summation <= this.state.maxPoints && posts){\r\n                        return tempArr = tempArr.concat(post);\r\n                    }\r\n                }\r\n            });\r\n            posts = tempArr;\r\n        }\r\n\r\n        if(posts && this.state.search_query && this.state.search_query.length >0){\r\n            let tempArr: postType[] = [];\r\n            posts.forEach(post => {\r\n                if(this.state.search_query &&post.name.toLowerCase().includes(this.state.search_query.toLowerCase())){\r\n                    tempArr = tempArr.concat(post);\r\n                }\r\n            })\r\n            posts = tempArr;\r\n        }\r\n        this.setState({filteredPosts: posts})\r\n    }\r\n\r\n    handleChange = (e: any) =>{\r\n        this.setState({...this.state, [e.target.id]: e.target.value})\r\n    }    \r\n\r\n    setMobileViewHeight = () => {\r\n        if(window.innerHeight > 600 && window.innerHeight <= 680){\r\n            return (\"69vh\");\r\n        }\r\n        else if(window.innerHeight > 680 && window.innerHeight <= 750){\r\n            return (\"72vh\");\r\n        }\r\n        else if(window.innerHeight > 750 && window.innerHeight <= 850){\r\n            return (\"75vh\");\r\n        }\r\n        else{\r\n            return(\"76vh\")\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const desktopFilterBar = (\r\n            <React.Fragment>\r\n                <div className=\"filterBar\" >\r\n                    <div style={{display:\"flex\", flexDirection:\"row\",alignItems:\"center\", padding:\"1%\"}}>\r\n                        <div style={{flex:2}}>\r\n                            <FormControl id=\"minPoints\" onChange={this.handleChange} placeholder=\"min. Points\"/>\r\n                        </div>\r\n                        <div style={{paddingLeft:\"1%\", paddingRight: \"1%\"}}>-</div>\r\n                        <div style={{flex:2}}>\r\n                            <FormControl id=\"maxPoints\" onChange={this.handleChange} placeholder=\"max. Points\"/>\r\n                        </div>\r\n                        <div style={{flex:1, display:\"flex\", justifyContent:\"flex-end\"}}>\r\n                            <Button onClick={this.handleFilter} variant=\"secondary\">Filter</Button>\r\n                        </div>\r\n                        <div style={{flex:7}}></div>\r\n                        <div style={{flex:2, display:\"flex\", justifyContent:\"flex-end\"}}>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle>\r\n                                    {this.state.internClass}\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item eventKey=\"3\" onSelect={(k,e) => {this.handleTypeSelect(k,e); this.state.debouncedFilter();}}>Select</Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"1\" onSelect={(k,e) => {this.handleTypeSelect(k,e); this.state.debouncedFilter();}}>Technical</Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"2\" onSelect={(k,e) => {this.handleTypeSelect(k,e); this.state.debouncedFilter();}}>Non-Technical</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </React.Fragment>\r\n        )\r\n\r\n        const mobileFilterBar = (\r\n            <React.Fragment>\r\n                <div className=\"filterBar\">\r\n                    <div style={{display:\"flex\", alignItems:\"center\", padding:\"2%\"}}>\r\n                        <Button onClick={() => {this.setState({isFilterModalOpen: true})}} variant=\"secondary\">\r\n                            <Filter width=\"25px\" height=\"25px\" />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Modal show={this.state.isFilterModalOpen} onHide={() => this.setState({isFilterModalOpen: false})}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Filter Results</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"row p-3\">\r\n                            <Form style={{width:\"100%\"}}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Type: </Form.Label>\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle>\r\n                                            {this.state.internClass}\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Item eventKey=\"1\" onSelect={this.handleTypeSelect}>Technical</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"2\" onSelect={this.handleTypeSelect}>Non-Technical</Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Values:</Form.Label>\r\n                                    <FormControl id=\"minPoints\" onChange={this.handleChange} placeholder=\"min. Points\"/>\r\n                                    <FormControl style={{marginTop: \"10px\"}} id=\"maxPoints\" onChange={this.handleChange} placeholder=\"max. Points\"/>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button onClick={this.handleFilter} variant=\"secondary\">Filter</Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n\r\n        const mobileBody= (\r\n            <React.Fragment>\r\n                <Row className=\"mx-auto\" style={{height: this.setMobileViewHeight(), overflowY:\"auto\", width:\"100%\"}}>\r\n                    {this.state.filteredPosts && this.state.filteredPosts.map((post : postType) => {\r\n                        return(\r\n                            <CardComponent data={post}/> \r\n                        );\r\n                    })}\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n\r\n        const desktopBody = (\r\n            <React.Fragment>\r\n                <Row className=\"px-4\">\r\n                    {this.state.filteredPosts && this.state.filteredPosts.map((post : postType) => {\r\n                        return(\r\n                            <CardComponent data={post}/> \r\n                        );\r\n                    })}\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n\r\n        const searchBar = (\r\n            <React.Fragment>\r\n                <Row className=\"p-0 m-0 justify-content-center\">\r\n                    <Col xs=\"11\" md=\"12\" className=\"p-0 m-0 \">\r\n                        <input style={{height:\"50px\", fontSize:\"35px\", textAlign:\"center\"}} id=\"search_query\" className=\"searchBar align-items-center\" onChange={(e) => {this.handleChange(e); this.state.debouncedFilter();}} placeholder=\"Search by Name\"/>\r\n                    </Col>                    \r\n                </Row>\r\n                \r\n            </React.Fragment>\r\n        )\r\n        \r\n        return(\r\n            <React.Fragment>\r\n                <Container fluid className=\"container\" style={{padding: (window.innerWidth > 800 ? undefined : 0)}}>\r\n                {searchBar}\r\n                    <div style={{borderStyle:\"solid\", borderColor:\"rgb(64,64,64,0.18)\", borderWidth:\"1px\", borderRadius:\"10px\"}}>\r\n                        <Row style={{width:\"100%\", padding:0, margin:0}}>\r\n                            <Col xs={12} style={{width:\"100%\", padding:0, margin:0}}>\r\n                                \r\n                                {window.innerWidth > 800 ? desktopFilterBar : mobileFilterBar}\r\n                                {window.innerWidth > 800 ? desktopBody : mobileBody}\r\n                            </Col>\r\n                            \r\n                        </Row>  \r\n                    </div>\r\n                    </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const loginAction = (payload: string) => ({\r\n    type: ActionTypes.LOGIN_ACTION,\r\n    payload: payload\r\n})\r\n\r\nexport const logoutAction = () => ({\r\n    type: ActionTypes.LOGOUT_ACTION\r\n})","export const LOGIN_ACTION = 'LOGIN_ACTION';\r\nexport const LOGOUT_ACTION = 'LOGOUT_ACTION';","import React from 'react';\r\nimport { Navbar, Nav, Dropdown } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { logoutAction } from '../../redux/ActionCreators';\r\nimport { connect } from 'react-redux';\r\nimport {GearFill} from 'react-bootstrap-icons'\r\nimport Axios from 'axios';\r\n\r\nimport {logout_url} from '../routes';\r\n\r\ninterface IProps {\r\n    isLoggedIn?: boolean;\r\n    logout?: any;\r\n    jwt_token?: string;\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    jwt_token: state.user.jwt_token,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    logout: () => dispatch(logoutAction())\r\n})\r\n\r\nconst NavComponentBasic = (props: IProps) =>{\r\n    console.log('login:', props.isLoggedIn );\r\n    var history = useHistory();\r\n    const handleSignOut = () =>{\r\n        console.log(\"toke: \", props.jwt_token);\r\n        \r\n        Axios.get(logout_url, {\r\n            headers:{\r\n                'Authorization': `bearer ${props.jwt_token}`\r\n            },\r\n            withCredentials: true,\r\n        }).then(res => {\r\n            console.log(\"response: \", res.data);\r\n            \r\n            if(res.data.logout){\r\n                props.logout();\r\n            }\r\n        });\r\n    }\r\n    const handleNav = (route: string) =>{\r\n        return history.push(route);\r\n    }\r\n    const buttons_loggedIn = (\r\n        <div className=\"justify-content-end\" style={{display: \"flex\", flexDirection: \"row\"}}>\r\n            <Nav.Link onClick={() => {handleSignOut(); handleNav('/SMFSReact_app/admin');}}>Sign Out</Nav.Link>\r\n            <Nav.Link onClick={() => handleNav('/SMFSReact_app/admin')}>Create Post </Nav.Link>\r\n        </div>\r\n    );\r\n\r\n    const buttons_notloggedIn = (\r\n        <div style={{display:\"flex\", flexDirection:\"row\"}}>\r\n            <Nav.Link onClick={() => handleNav('/SMFSReact_app/register')} className=\"justify-content-end\"> Signup </Nav.Link>\r\n            <Nav.Link onClick={() => handleNav('/SMFSReact_app/login')} className=\"justify-content-end\"> Login </Nav.Link>\r\n        </div>\r\n    )\r\n\r\n    const desktopNavbar = (\r\n        <React.Fragment>\r\n            {props.isLoggedIn ? buttons_loggedIn : buttons_notloggedIn}\r\n        </React.Fragment>\r\n    );\r\n\r\n    const mobileNavbar = (\r\n        <React.Fragment>\r\n            <div>\r\n                <Dropdown drop=\"left\">\r\n                    <Dropdown.Toggle size=\"sm\" variant=\"primary\"> <GearFill/> </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        {props.isLoggedIn ? \r\n                            <React.Fragment>\r\n                                <Dropdown.Item onClick={() => handleNav('/SMFSReact_app/')}>Home</Dropdown.Item>\r\n                                <Dropdown.Item onClick={() => handleNav('/SMFSReact_app/admin')}>Create Post</Dropdown.Item>\r\n                                <Dropdown.Item onClick={() => {handleSignOut(); handleNav('/SMFSReact_app/login')}}>Sign Out</Dropdown.Item> \r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <Dropdown.Item onClick={() => handleNav('/SMFSReact_app/login')}>Login</Dropdown.Item> \r\n                                <Dropdown.Item onClick={() => handleNav('/SMFSReact_app/register')}>Sign Up</Dropdown.Item>\r\n                                <Dropdown.Item onClick={() => handleNav('/SMFSReact_app/')}>Home</Dropdown.Item>\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n    return(\r\n        \r\n        <Navbar variant=\"dark\" bg=\"dark\" sticky=\"top\" style={{height:\"40px\", marginBottom:\"10px\"}}>\r\n            <Navbar.Brand><Link to=\"/SMFSReact_app/\" style={{color: \"#ffff\"}}>Internships</Link></Navbar.Brand>\r\n            {window.innerWidth > 800 ?  <Nav.Link onClick={() => handleNav('/SMFSReact_app/')}>Home</Nav.Link> : null}\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                {window.innerWidth > 800 ?  desktopNavbar : mobileNavbar}\r\n            </Navbar.Collapse>\r\n            \r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport const NavComponent = connect(mapStateToProps, mapDispatchToProps)(NavComponentBasic);","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { Form, Container, Button, Table, Dropdown } from 'react-bootstrap';\r\nimport {newPost_url} from '../routes';\r\n\r\nimport './styles.css'\r\nimport { connect } from 'react-redux';\r\n\r\ninterface IProps {\r\n    jwt_token?: string\r\n}\r\n\r\ninterface IState {\r\n    name: string;\r\n    class: string;\r\n    company: string;\r\n    details: string;\r\n    breakup: {category: string, points: number}[];\r\n    newCat: boolean;\r\n    new_cat: string;\r\n    new_points: string;\r\n    submission_success: boolean;\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    jwt_token: state.user.jwt_token,\r\n})\r\n\r\nconst initialState = {\r\n    name: '',\r\n    class: 'Select',\r\n    company: '',\r\n    details: '',\r\n    breakup: [],\r\n    newCat: false,\r\n    new_cat: '',\r\n    new_points: '',\r\n}\r\n\r\nclass AdminBasic extends React.Component<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state={\r\n            ...initialState,\r\n            submission_success: false\r\n        }\r\n    }\r\n\r\n    handleChange = (e:{target:{id: string, value: string}}) =>{\r\n        console.log(\"points: \", this.state.new_points);\r\n        console.log(\"val: \", e.target.value);\r\n        \r\n        if((e.target.id === \"new_points\") && ((!/[0-9]/.test(e.target.value.slice(e.target.value.length -1, e.target.value.length)))?!(e.target.value === '') : (e.target.value === ''))){\r\n            return;\r\n        }\r\n        this.setState({...this.state, [e.target.id]: e.target.value, submission_success: false});\r\n    }\r\n\r\n    handleCategoryAdd = () =>{\r\n        if(this.state.new_cat === '' && this.state.new_points ==='0'){\r\n            return this.setState({newCat: false})\r\n        }\r\n        if(this.state.new_points)\r\n        this.setState({breakup: this.state.breakup.concat({category: this.state.new_cat, points: parseInt(this.state.new_points)})});\r\n        this.setState({new_cat:'', new_points: '', newCat: false})\r\n    }\r\n\r\n    handleDropdown = (k: any, e: any) =>{\r\n        this.setState({class: e.target.text})\r\n    }\r\n\r\n    handlesubmit = () =>{\r\n        Axios({\r\n            url: newPost_url,\r\n            headers:{\r\n                'Authorization': `bearer ${this.props.jwt_token}`\r\n            },\r\n            data:{\r\n                name: this.state.name,\r\n                company: this.state.company,\r\n                details: this.state.details,\r\n                class: this.state.class,\r\n                pointsBreakup: this.state.breakup\r\n            },\r\n            method:\"POST\"\r\n        }).then(res => {\r\n            console.log(\"response: \", res);\r\n            this.setState({...initialState,submission_success: true})\r\n        }).catch(err => {\r\n            console.log(\"error: \", err);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const addCategory = (\r\n            <div className=\"row\">\r\n                <input onChange={this.handleChange} value={this.state.new_cat} placeholder=\"Category\" style={{marginLeft:\"10px\", marginRight:\"10px\"}} className=\"col-md-6 col-xs-10\" id=\"new_cat\"/>\r\n                <input onChange={this.handleChange} value={this.state.new_points ? this.state.new_points : ''} placeholder=\"Points\" style={{margin:\"10px\"}} className=\"col-md-6 col-xs-10\" id=\"new_points\"/>\r\n            </div>\r\n        )\r\n\r\n        const formFields = (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label> Title: </Form.Label>\r\n                    <Form.Control value={this.state.name} id=\"name\" onChange={this.handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label> Type: </Form.Label>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle>\r\n                            {this.state.class}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onSelect={this.handleDropdown}>Technical</Dropdown.Item>\r\n                            <Dropdown.Item onSelect={this.handleDropdown}>Non-Technical</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label> Company: </Form.Label>\r\n                    <Form.Control value={this.state.company} id=\"company\" onChange={this.handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label> Details: </Form.Label>\r\n                    <Form.Control value={this.state.details} as=\"textarea\" rows={10} id=\"details\" onChange={this.handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Breakup:</Form.Label>\r\n                    <div>\r\n                        {this.state.breakup && this.state.breakup.length > 0 &&\r\n                            <Table size=\"sm\" style={{width:\"50%\"}}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Category</th>\r\n                                        <th>Points</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.breakup?.map((ele: {category: string, points: number}) => {\r\n                                        return(\r\n                                            <tr>\r\n                                                <td> {ele.category} </td>\r\n                                                <td> {ele.points} </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        }\r\n                    </div>\r\n                    {this.state.newCat ? addCategory : null}\r\n                    {this.state.newCat ? <Button variant=\"secondary\" onClick={this.handleCategoryAdd}>Add</Button>\r\n                        : <Button variant=\"secondary\" onClick={() => {this.setState({newCat: true})}}>New Category</Button>}\r\n\r\n                </Form.Group>\r\n                <Form.Group style={{display: \"flex\", flexDirection: \"row\"}}>\r\n                    <Button variant={this.state.submission_success ? \"success\": \"primary\"} disabled={this.state.name === '' || this.state.class === 'Select' || this.state.company === '' || this.state.details === ''} onClick={this.handlesubmit}>{this.state.submission_success ? \"Post Created\": \"Submit\"}</Button>\r\n                </Form.Group>\r\n            </Form>\r\n        )\r\n        return(\r\n            <Container>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 col-xs-12 mx-auto\">\r\n                        <h3 style={{marginBottom:\"20px\"}}>Create New Post:</h3>\r\n                        {formFields}\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport const Admin = connect(mapStateToProps, null)(AdminBasic);\r\n","import React, { useEffect } from 'react';\r\nimport {Switch, Route, Redirect, withRouter, useHistory} from 'react-router-dom';\r\nimport {Login} from './index';\r\nimport { Home } from './Home/HomeComponent';\r\nimport { NavComponent } from './Navigation';\r\nimport { Admin } from './Admin'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\nimport Axios from 'axios';\r\nimport { get_status_url } from './routes';\r\nimport { loginAction } from '../redux/ActionCreators';\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    jwt_token: state.user.jwt_token\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    login: (token: string) => dispatch(loginAction(token))\r\n})\r\n\r\n\r\ninterface IProps {\r\n    login?: any;\r\n    isLoggedIn?: boolean;\r\n    jwt_token?: string;\r\n}\r\n\r\nconst MainBasic = (props: IProps) => {\r\n\r\n    useEffect(() => {\r\n        if(!props.isLoggedIn){\r\n            console.log(\"trying to log in\");\r\n            Axios.get(get_status_url,{\r\n                withCredentials:true\r\n            }).then(res => {\r\n                props.login(res.data.token);\r\n                console.log(\"logged in\");\r\n                \r\n            }).catch((err) => {\r\n                console.error(err);\r\n            })\r\n        }\r\n    });\r\n    \r\n    var history = useHistory();\r\n    console.log(\"path:\" , history.location.pathname);\r\n    console.log(\"logged in ?: \", props.isLoggedIn);\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <NavComponent isLoggedIn = {props.isLoggedIn}/>\r\n                <Switch>\r\n                    {props.isLoggedIn ? \r\n                        <React.Fragment>\r\n                            <Route exact path=\"/SMFSReact_app/\" component={Home}/>\r\n                            <Route exact path={\"/SMFSReact_app/admin/\"} render={() => <Admin/>}/>\r\n                            <Redirect to={\"/SMFSReact_app/\"}/>\r\n                        </React.Fragment>\r\n                        : \r\n                        <React.Fragment>\r\n                            <Route exact path=\"/SMFSReact_app/\" component={Home}/>\r\n                            <Route exact path={'/SMFSReact_app/login'} render={() => <Login isSignup={false}/>}/>\r\n                            <Route exact path={'/SMFSReact_app/register'} render={() => <Login isSignup={true}/>}/>\r\n                            <Redirect to={\"/SMFSReact_app/\"}/>\r\n                        </React.Fragment>\r\n                        }\r\n                </Switch>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport const Main = compose<any, any>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(MainBasic);\r\n//export const Main = withRouter(connect(mapStateToProps, null)(MainBasic));\r\n\r\n","import React from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport {login_url, signup_url} from '../routes';\r\n\r\nimport './styles.css';\r\nimport { connect } from 'react-redux';\r\nimport { loginAction } from '../../redux/ActionCreators';\r\n\r\ninterface IProps {\r\n    login?: any;\r\n    history?: any;\r\n    isSignup?:boolean\r\n}\r\n\r\ninterface IState {\r\n    username: string | null;\r\n    password: string | null;\r\n    isSignupForm: boolean;\r\n    passwordError: boolean;\r\n    usernameExists: boolean;\r\n    badCredentials: boolean;\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    isLoggedIn: state.user.isLoggedIn\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    login: (token: string) => dispatch(loginAction(token))\r\n});\r\n\r\nclass LoginBasic extends React.Component<IProps, IState> {\r\nconstructor(props: IProps){\r\n    super(props);\r\n    this.state={\r\n        username: null,\r\n        password: null,\r\n        isSignupForm: (this.props.isSignup ? this.props.isSignup : false),\r\n        passwordError: false,\r\n        usernameExists: false,\r\n        badCredentials: false\r\n    }\r\n}\r\n\r\nhandleChange = (e: any) => {  \r\n    if(e.target.id === \"username\"){\r\n        return this.setState({username: e.target.value, usernameExists: false});\r\n    }\r\n    else if(e.target.id === \"password\"){\r\n        return this.setState({password: e.target.value, passwordError: true});\r\n    }\r\n    else if(e.target.id === \"confirm_password\"){\r\n        if(e.target.value === this.state.password){\r\n            this.setState({passwordError: false});\r\n        }\r\n        else{\r\n            this.setState({passwordError: true});\r\n        }\r\n    }\r\n}\r\n\r\nasync handleClick (action: string) {\r\n    \r\n    console.log(\"action: \", action);\r\n    if(action === 'login'){\r\n        await axios.post(login_url,{\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        },{\r\n            headers:{\"Access-Control-Allow-Credentials\": \"true\"},\r\n            withCredentials: true,\r\n        }).then(res => {\r\n            if(res.data.success){\r\n                this.props.login(res.data.token);\r\n                this.props.history.push('/');\r\n            }\r\n            console.log(\"response:\", res.data.token);\r\n        }).catch(err => {\r\n            if(err.response && err.response.status === 401){\r\n                this.setState({badCredentials: true})\r\n            }\r\n        });\r\n    } else if(action === 'signup'){\r\n        await axios.post(signup_url,{\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        },{withCredentials: true}).then( async res => {\r\n            await axios.post(login_url,{\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            },{\r\n                headers:{\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                withCredentials: true,\r\n            }).then(res => {\r\n                if(res.data.success){\r\n                    this.props.login(res.data.token);\r\n                    this.props.history.push('/');\r\n                }\r\n                console.log(\"response:\", res.data.token);\r\n            }).catch(err => {\r\n                if(err.response && err.response.status === 401){\r\n                    this.setState({badCredentials: true})\r\n                }\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"error: \", err);\r\n            \r\n            if(err.response && err.response.status === 409){\r\n                this.setState({usernameExists: true})\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nrender(){\r\n    const LoginButton = (\r\n        <Button onClick={() => this.handleClick('login')}>\r\n            Login\r\n        </Button>\r\n    );\r\n    const SignupButton = (\r\n        <Button disabled={this.state.passwordError || this.state.password?.length === 0 || !this.state.password} onClick={() => this.handleClick('signup')}>\r\n            Signup\r\n        </Button>\r\n    );\r\n\r\n    const PassConfirm_Field = (\r\n        <Form.Group>\r\n            <Form.Label>Confirm Password: </Form.Label>\r\n            <Form.Control onChange={this.handleChange} id=\"confirm_password\" type=\"password\" placeholder=\"Confirm Password\"/>\r\n            {this.state.passwordError ? <Form.Text> Passwords should match</Form.Text> : null}\r\n        </Form.Group>\r\n    );\r\n\r\n    return(\r\n        <Container>\r\n            <h3 style={{textAlign:\"center\", marginBottom:\"20px\", marginTop:\"20px\"}}>{this.state.isSignupForm ? \"Signup for a new account:\" : \"Login with your account:\"} </h3>\r\n            <div className=\"formContainer mx-auto\">\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Email: </Form.Label>\r\n                        <Form.Control id=\"username\" onChange={this.handleChange} type='email' placeholder=\"Enter your email\" style={{width: \"30vw\", minWidth:\"300px\"}}/>\r\n                        <Form.Text hidden={!this.state.usernameExists}>Username taken please try another one.</Form.Text>\r\n                        <Form.Text hidden={!this.state.badCredentials}>Wrong Username/Password</Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password: </Form.Label>\r\n                        <Form.Control id=\"password\" onChange={this.handleChange} type='password' placeholder=\"Password\" style={{width: \"30vw\", minWidth: \"300px\"}} />\r\n                    </Form.Group>\r\n                    {this.state.isSignupForm ? PassConfirm_Field : null}\r\n                    <Form.Group>\r\n                        {this.state.isSignupForm ? SignupButton : LoginButton}\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                    <div style={{textAlign:\"center\"}}>\r\n                        {this.state.isSignupForm ? <a href='#' onClick={() => this.setState({isSignupForm: !this.state.isSignupForm, badCredentials: false})}>Already a member? Login</a> : <a href=\"#\" onClick={() => this.setState({isSignupForm: !this.state.isSignupForm, badCredentials: false})}>Signup</a>}\r\n                    </div>\r\n                    </Form.Group>\r\n                </Form>\r\n                \r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n    \r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(LoginBasic);","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const User = (\r\n    state = {\r\n        isLoggedIn: false,\r\n        jwt_token: null\r\n    },\r\n    action: any\r\n) => {\r\n    switch(action.type){\r\n        case ActionTypes.LOGIN_ACTION:{\r\n            console.log(\"set token: \", action.payload);\r\n            \r\n            return {...state, isLoggedIn: true, jwt_token: action.payload};\r\n        }\r\n            \r\n        case ActionTypes.LOGOUT_ACTION:{\r\n            console.log(\"logout\");\r\n            return {...state, isLoggedIn: false, jwt_token: null}\r\n            \r\n        }\r\n           \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport {Main} from './Components'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/ConfigureStore';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Main/>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers} from 'redux';\r\nimport {User} from './reducers/User';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            user: User,\r\n\r\n        })\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}