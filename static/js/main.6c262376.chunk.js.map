{"version":3,"sources":["Components/Home/constants.ts","Components/Home/RenderPieChart.tsx","Components/Home/RenderpointsList.tsx","Components/Home/HomeModal.tsx","Components/Home/CardComponent.tsx","Components/Home/HomeComponent.tsx","Components/Navigation/Navbar.tsx","redux/ActionCreators.tsx","redux/ActionTypes.ts","Components/Navigation/constants.ts","Components/Admin/Admin.tsx","Components/Admin/constants.ts","Components/Main.tsx","Components/Auth/Login.tsx","Components/Auth/constants.ts","redux/reducers/User.tsx","App.tsx","redux/ConfigureStore.tsx","serviceWorker.ts","index.tsx"],"names":["pieChartColors","RenderPieChart","props","data","pointsBreakup","length","renderdata","map","stat","index","title","category","value","points","color","Fragment","animate","radius","PointsList","Table","striped","borderless","hover","size","breakup","HomeModal","Modal","show","open","onHide","toggle","Header","closeButton","Title","post","company","Body","className","style","paddingLeft","name","padding","details","maxHeight","overflowY","CardComponent","useState","isModalOpen","toggleModal","Col","xs","sm","md","lg","Card","onClick","height","overflowX","Subtitle","class","Text","Button","Home","handleTypeSelect","key","e","state","posts","setState","filteredPosts","filter","target","text","internClass","handleFilter","minPoints","maxPoints","summation","forEach","obj","concat","handleChange","id","isLoading","isFilterModalOpen","fetch","then","res","json","console","log","desktopFilterBar","display","flexDirection","alignItems","flex","FormControl","onChange","this","placeholder","paddingRight","justifyContent","variant","Dropdown","Toggle","Menu","Item","eventKey","onSelect","mobileFilterBar","width","backdrop","window","innerWidth","Form","Group","Label","marginTop","Container","fluid","undefined","borderStyle","borderColor","borderWidth","borderRadius","Row","React","Component","NavComponent","connect","jwt_token","user","dispatch","logout","type","isLoggedIn","buttons_loggedIn","Nav","Link","Axios","get","headers","to","buttons_notloggedIn","Navbar","bg","sticky","marginBottom","Brand","Collapse","initialState","newCat","new_cat","new_points","AdminBasic","handleCategoryAdd","handleDropdown","k","handlesubmit","url","method","submission_success","catch","err","addCategory","marginLeft","marginRight","margin","formFields","Control","as","rows","ele","disabled","Admin","Main","exact","path","component","Login","LoginBasic","username","usernameExists","password","passwordError","isSignupForm","badCredentials","action","axios","success","login","token","history","push","response","status","LoginButton","handleClick","SignupButton","PassConfirm_Field","textAlign","minWidth","hidden","href","payload","User","store","createStore","combineReducers","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6c262376.chunk.js","sourcesContent":["export const fetchPosts_url = \"https://sm-fs-express.herokuapp.com/internship/\";\r\n\r\nexport const pieChartColors =[\"#E38627\", \"#C13C37\", \"#6A2135\", \"#99ffdd\"];","import React from 'react';\r\nimport {PieChart} from 'react-minimal-pie-chart';\r\nimport {pieChartColors} from './constants';\r\n\r\ninterface IProps {\r\n    pointsBreakup: [{category: string, points: number}] | [];\r\n}\r\n\r\nexport const RenderPieChart = (props: IProps) =>{\r\n    var data : [{category: string, points: number}] | null | [] = null;\r\n\r\n    if(props.pointsBreakup !== []){\r\n        data = props.pointsBreakup;\r\n    }\r\n\r\n    if(!data || data.length === 0){\r\n        return (\r\n            null\r\n        );\r\n    }\r\n    else{\r\n        const renderdata = data.map((stat: {category: string, points: number}, index) =>{\r\n            return {title: stat.category, value: stat.points, color: pieChartColors[index % pieChartColors.length]};\r\n        });\r\n    \r\n        return(\r\n            <React.Fragment>\r\n                <PieChart animate radius={40} data = {renderdata}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    \r\n    \r\n    \r\n}","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\ninterface IProps {\r\n    pointsBreakup: [{category: string, points: number}] | [];\r\n}\r\n\r\nexport const PointsList = (props: IProps) => {\r\n    if(props.pointsBreakup.length === 0){\r\n        return(\r\n            null\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <Table striped borderless hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Criteria</th>\r\n                        <th>Beta Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.pointsBreakup.map(breakup => {\r\n                        return(\r\n                            <tr>\r\n                                <td> {breakup.category} </td>\r\n                                <td> {breakup.points} </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { postType } from './HomeComponent';\r\nimport { RenderPieChart } from './RenderPieChart';\r\nimport { PointsList } from './RenderpointsList';\r\n\r\ninterface IProps {\r\n    open: boolean;\r\n    toggle: () => void;\r\n    post: postType;\r\n}\r\n\r\nexport const HomeModal = (props: IProps) =>{\r\n    return(\r\n        <Modal show={props.open} onHide={props.toggle}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    {props.post.company}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"row\" style={{paddingLeft: \"16px\"}}>\r\n                    <h4> {props.post.name} </h4>\r\n                </div>\r\n                <div className=\"row\" style={{padding: \"16px\"}}>\r\n                    {props.post.details}\r\n                </div>\r\n                <div className=\"row\" style={{padding: \"10px\"}}>\r\n                    <div className=\"col-6\">\r\n                        <RenderPieChart pointsBreakup={props.post.pointsBreakup}/>\r\n                    </div>\r\n                    <div className=\"col-6\" style={{maxHeight:\"250px\", overflowY:\"auto\"}}>\r\n                        <PointsList pointsBreakup={props.post.pointsBreakup} />\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Card, Col, Button } from 'react-bootstrap';\r\nimport { RenderPieChart } from './RenderPieChart';\r\nimport { PointsList } from './RenderpointsList'\r\nimport { HomeModal } from './HomeModal';\r\n\r\ntype postType = {name: string, company: string, details: string, class: string, pointsBreakup:[{category: string, points: number}]}\r\n\r\ninterface IProps {\r\n    data: postType;\r\n}\r\n\r\n\r\nexport const CardComponent = (props: IProps) => {\r\n    const [isModalOpen, toggleModal] = useState(false);\r\n\r\n    const text = (\r\n        <div className=\"row\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-11 p-0\">\r\n                {props.data.details}\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"row justify-content-center col-12 pt-2\">\r\n                <div className=\"col-4 justify-content-center pt-1\">\r\n                    <RenderPieChart pointsBreakup={props.data.pointsBreakup}/>\r\n                </div>\r\n                <div className=\"col-8 justify-content-center pt-1\" style={{overflowY:\"auto\", maxHeight:\"200px\"}}>\r\n                    <PointsList pointsBreakup={props.data.pointsBreakup} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    return(\r\n        <React.Fragment>\r\n            <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" >\r\n                    <Card onClick={() => toggleModal(true)} className=\"mx-auto my-1\">\r\n                        <Card.Body>\r\n                            <div style={{height:\"100px\", overflowX:\"auto\"}}>\r\n                                <Card.Title> {props.data.name} - {props.data.company} </Card.Title>\r\n                                <Card.Subtitle className=\"text-muted mb-2\"> {props.data.class} </Card.Subtitle>\r\n                            </div>\r\n                            <Card.Text><Button>Apply</Button></Card.Text>\r\n                        </Card.Body>                                        \r\n                    </Card>\r\n            </Col>\r\n            <HomeModal open={isModalOpen} toggle={() => toggleModal(false)} post={props.data}/>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport {Container, Row, FormControl, Dropdown, Col, Button, Modal, Form} from 'react-bootstrap';\r\nimport {fetchPosts_url} from './constants';\r\nimport {CardComponent} from './CardComponent';\r\nimport { Filter } from 'react-bootstrap-icons'\r\n\r\nimport './styles.css';\r\n\r\nexport type postType = {name: string, company: string, details: string, class: string, pointsBreakup:[{category: string, points: number}]}\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    isLoading: boolean;\r\n    posts: [postType] | null;\r\n    filteredPosts: postType[] | null;\r\n    internClass: string;\r\n    minPoints: number | null;\r\n    maxPoints: number | null;\r\n    isFilterModalOpen: boolean;\r\n}\r\n\r\nexport class Home extends React.Component<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state={\r\n            isLoading: true,\r\n            posts: null,\r\n            filteredPosts: null,\r\n            internClass: \"Select\",\r\n            minPoints: null,\r\n            maxPoints: null,\r\n            isFilterModalOpen: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(fetchPosts_url).then((res) => {            \r\n            return res.json();\r\n        }).then(data => {\r\n            console.log(data);\r\n            this.setState({posts: data, isLoading: false, filteredPosts: data});\r\n        })\r\n    }\r\n\r\n    handleTypeSelect = (key: any, e:any) => {\r\n        if(this.state.posts && e && this.state.posts.length > 0){\r\n            this.setState({ filteredPosts: this.state.posts?.filter((post) => post.class === e.target.text), internClass: e.target.text});\r\n        }\r\n        return;\r\n    }\r\n\r\n    handleFilter = () =>{\r\n        var posts: postType[] = [];\r\n        if((this.state.minPoints || this.state.maxPoints) && this.state.posts && this.state.posts.length > 0){\r\n            this.state.posts.map((post) => {\r\n                if(post.pointsBreakup.length > 0){\r\n                    var summation = 0;\r\n                    post.pointsBreakup.forEach(obj => (summation = summation + obj.points));\r\n                    if(this.state.minPoints && this.state.maxPoints && summation >= this.state.minPoints && summation <= this.state.maxPoints){\r\n                        return posts = posts.concat(post);\r\n                    }\r\n                    else if(this.state.minPoints && !this.state.maxPoints && summation >= this.state.minPoints){\r\n                        return posts = posts.concat(post);\r\n                    }\r\n                    else if(this.state.maxPoints && !this.state.minPoints && summation <= this.state.maxPoints){\r\n                        return posts = posts.concat(post);\r\n                    }\r\n                }\r\n            });\r\n            return this.setState({filteredPosts: posts});\r\n        }\r\n        else{\r\n            return this.setState({filteredPosts: this.state.posts});\r\n        }\r\n    }\r\n\r\n    handleChange = (e: any) =>{\r\n        this.setState({...this.state, [e.target.id]: e.target.value})\r\n    }    \r\n\r\n    render(){\r\n        const desktopFilterBar = (\r\n            <React.Fragment>\r\n                <div className=\"filterBar\" >\r\n                    <div style={{display:\"flex\", flexDirection:\"row\",alignItems:\"center\", padding:\"1%\"}}>\r\n                        <div style={{flex:2}}>\r\n                            <FormControl id=\"minPoints\" onChange={this.handleChange} placeholder=\"min. Points\"/>\r\n                        </div>\r\n                        <div style={{paddingLeft:\"1%\", paddingRight: \"1%\"}}>-</div>\r\n                        <div style={{flex:2}}>\r\n                            <FormControl id=\"maxPoints\" onChange={this.handleChange} placeholder=\"max. Points\"/>\r\n                        </div>\r\n                        <div style={{flex:1, display:\"flex\", justifyContent:\"flex-end\"}}>\r\n                            <Button onClick={this.handleFilter} variant=\"secondary\">Filter</Button>\r\n                        </div>\r\n                        <div style={{flex:7}}></div>\r\n                        <div style={{flex:2, display:\"flex\", justifyContent:\"flex-end\"}}>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle>\r\n                                    {this.state.internClass}\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item eventKey=\"1\" onSelect={this.handleTypeSelect}>Technical</Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"2\" onSelect={this.handleTypeSelect}>Non-Technical</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </React.Fragment>\r\n        )\r\n\r\n        const mobileFilterBar = (\r\n            <React.Fragment>\r\n                <div className=\"filterBar\">\r\n                    <div style={{display:\"flex\", alignItems:\"center\", padding:\"3%\"}}>\r\n                        <Button onClick={() => {this.setState({isFilterModalOpen: true})}} variant=\"secondary\">\r\n                            <Filter width=\"25px\" height=\"25px\" />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Modal backdrop={window.innerWidth > 800 ? true : false} show={this.state.isFilterModalOpen} onHide={() => this.setState({isFilterModalOpen: false})}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Filter Results</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"row p-3\">\r\n                            <Form style={{width:\"100%\"}}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Type: </Form.Label>\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle>\r\n                                            {this.state.internClass}\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Item eventKey=\"1\" onSelect={this.handleTypeSelect}>Technical</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"2\" onSelect={this.handleTypeSelect}>Non-Technical</Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Values:</Form.Label>\r\n                                    <FormControl id=\"minPoints\" onChange={this.handleChange} placeholder=\"min. Points\"/>\r\n                                    <FormControl style={{marginTop: \"10px\"}} id=\"maxPoints\" onChange={this.handleChange} placeholder=\"max. Points\"/>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button onClick={this.handleFilter} variant=\"secondary\">Filter</Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n        \r\n        return(\r\n            <React.Fragment>\r\n                <Container fluid className=\"container\" style={{padding: (window.innerWidth > 800 ? undefined : 0)}}>\r\n                    <div style={{borderStyle:\"solid\", borderColor:\"rgb(64,64,64,0.18)\", borderWidth:\"1px\", borderRadius:\"10px\"}}>\r\n                        <Row>\r\n                            <Col>\r\n                            {window.innerWidth > 800 ? desktopFilterBar : mobileFilterBar}\r\n                            <Row style={{height:\"80vh\", overflowY:\"auto\"}} className=\"px-3\">\r\n                                {this.state.filteredPosts && this.state.filteredPosts.map((post : postType) => {\r\n                                    return(\r\n                                        <CardComponent data={post}/> \r\n                                    );\r\n                                })}\r\n                            </Row>\r\n                            </Col>\r\n                            \r\n                        </Row>  \r\n                    </div>\r\n                    </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { logoutAction } from '../../redux/ActionCreators';\r\nimport { connect } from 'react-redux';\r\nimport Axios from 'axios';\r\n\r\nimport {logout_url} from './constants'\r\n\r\ninterface IProps {\r\n    isLoggedIn?: boolean;\r\n    logout?: any;\r\n    jwt_token?: string;\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    jwt_token: state.user.jwt_token,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    logout: () => dispatch(logoutAction())\r\n})\r\n\r\nconst NavComponentBasic = (props: IProps) =>{\r\n    console.log('login:', props.isLoggedIn );\r\n    \r\n    const handleClick = () =>{\r\n        console.log(\"toke: \", props.jwt_token);\r\n        \r\n        Axios.get(logout_url, {\r\n            headers:{\r\n                'Authorization': `bearer ${props.jwt_token}`\r\n            }\r\n        }).then(res => {\r\n            console.log(\"response: \", res.data);\r\n            \r\n            if(res.data.logout){\r\n                props.logout();\r\n            }\r\n        });\r\n    }\r\n    const buttons_loggedIn = (\r\n        <div className=\"justify-content-end\" style={{display: \"flex\", flexDirection: \"row\"}}>\r\n            <Nav.Link onClick={handleClick} ><Link to='/login'> Sign Out </Link></Nav.Link>\r\n            <Nav.Link><Link to='/admin'> Create Post </Link></Nav.Link>\r\n        </div>\r\n    );\r\n\r\n    const buttons_notloggedIn = (\r\n        <Nav.Link className=\"justify-content-end\"><Link to='/login'> Login </Link></Nav.Link>\r\n    )\r\n\r\n    return(\r\n        \r\n        <Navbar bg=\"light\" sticky=\"top\" style={{height:\"40px\", marginBottom:\"10px\"}}>\r\n            <Navbar.Brand>Internships</Navbar.Brand>\r\n            <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                {props.isLoggedIn ? buttons_loggedIn : buttons_notloggedIn}\r\n            </Navbar.Collapse>\r\n            \r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport const NavComponent = connect(mapStateToProps, mapDispatchToProps)(NavComponentBasic);","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const loginAction = (payload: string) => ({\r\n    type: ActionTypes.LOGIN_ACTION,\r\n    payload: payload\r\n})\r\n\r\nexport const logoutAction = () => ({\r\n    type: ActionTypes.LOGOUT_ACTION\r\n})","export const LOGIN_ACTION = 'LOGIN_ACTION';\r\nexport const LOGOUT_ACTION = 'LOGOUT_ACTION';","export const logout_url = 'https://sm-fs-express.herokuapp.com/admin/logout';","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { Form, Container, Button, Table, Dropdown } from 'react-bootstrap';\r\nimport {newPost_url} from './constants';\r\n\r\nimport './styles.css'\r\nimport { connect } from 'react-redux';\r\n\r\ninterface IProps {\r\n    jwt_token?: string\r\n}\r\n\r\ninterface IState {\r\n    name: string;\r\n    class: string;\r\n    company: string;\r\n    details: string;\r\n    breakup: {category: string, points: number}[];\r\n    newCat: boolean;\r\n    new_cat: string;\r\n    new_points: number;\r\n    submission_success: boolean;\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    jwt_token: state.user.jwt_token,\r\n})\r\n\r\nconst initialState = {\r\n    name: '',\r\n    class: 'Select',\r\n    company: '',\r\n    details: '',\r\n    breakup: [],\r\n    newCat: false,\r\n    new_cat: '',\r\n    new_points: 0,\r\n}\r\n\r\nclass AdminBasic extends React.Component<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state={\r\n            ...initialState,\r\n            submission_success: false\r\n        }\r\n    }\r\n\r\n    handleChange = (e:any) =>{\r\n        this.setState({...this.state, [e.target.id]: e.target.value, submission_success: false});\r\n    }\r\n\r\n    handleCategoryAdd = () =>{\r\n        if(this.state.new_cat === '' && this.state.new_points ===0){\r\n            return this.setState({newCat: false})\r\n        }\r\n        this.setState({breakup: this.state.breakup.concat({category: this.state.new_cat, points: this.state.new_points})});\r\n        this.setState({new_cat:'', new_points: 0, newCat: false})\r\n    }\r\n\r\n    handleDropdown = (k: any, e: any) =>{\r\n        this.setState({class: e.target.text})\r\n    }\r\n\r\n    handlesubmit = () =>{\r\n        Axios({\r\n            url: newPost_url,\r\n            headers:{\r\n                'Authorization': `bearer ${this.props.jwt_token}`\r\n            },\r\n            data:{\r\n                name: this.state.name,\r\n                company: this.state.company,\r\n                details: this.state.details,\r\n                class: this.state.class,\r\n                pointsBreakup: this.state.breakup\r\n            },\r\n            method:\"POST\"\r\n        }).then(res => {\r\n            console.log(\"response: \", res);\r\n            this.setState({...initialState, submission_success: true})\r\n        }).catch(err => {\r\n            console.log(\"error: \", err);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const addCategory = (\r\n            <div className=\"row\">\r\n                <input onChange={this.handleChange} placeholder=\"Category\" style={{marginLeft:\"10px\", marginRight:\"10px\"}} className=\"col-md-6 col-xs-10\" id=\"new_cat\"/>\r\n                <input onChange={this.handleChange} placeholder=\"Points\" style={{margin:\"10px\"}} className=\"col-md-6 col-xs-10\" id=\"new_points\"/>\r\n            </div>\r\n        )\r\n\r\n        const formFields = (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label> Title: </Form.Label>\r\n                    <Form.Control id=\"name\" onChange={this.handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label> Type: </Form.Label>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle>\r\n                            {this.state.class}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onSelect={this.handleDropdown}>Technical</Dropdown.Item>\r\n                            <Dropdown.Item onSelect={this.handleDropdown}>Non-Technical</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label> Company: </Form.Label>\r\n                    <Form.Control id=\"company\" onChange={this.handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label> Details: </Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={10} id=\"details\" onChange={this.handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Breakup:</Form.Label>\r\n                    <div>\r\n                        {this.state.breakup && this.state.breakup.length > 0 &&\r\n                            <Table size=\"sm\" style={{width:\"50%\"}}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Category</th>\r\n                                        <th>Points</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.breakup?.map((ele: {category: string, points: number}) => {\r\n                                        return(\r\n                                            <tr>\r\n                                                <td> {ele.category} </td>\r\n                                                <td> {ele.points} </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        }\r\n                    </div>\r\n                    {this.state.newCat ? addCategory : null}\r\n                    {this.state.newCat ? <Button variant=\"secondary\" onClick={this.handleCategoryAdd}>Add</Button>\r\n                        : <Button variant=\"secondary\" onClick={() => {this.setState({newCat: true})}}>New Category</Button>}\r\n\r\n                </Form.Group>\r\n                <Form.Group style={{display: \"flex\", flexDirection: \"row\"}}>\r\n                    <Button variant={this.state.submission_success ? \"success\": \"primary\"} disabled={this.state.name === '' || this.state.class === 'Select' || this.state.company === '' || this.state.details === ''} onClick={this.handlesubmit}>{this.state.submission_success ? \"Post Created\": \"Submit\"}</Button>\r\n                </Form.Group>\r\n            </Form>\r\n        )\r\n        return(\r\n            <Container>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 col-xs-12 mx-auto\">\r\n                        <h3 style={{marginBottom:\"20px\"}}>Create New Post:</h3>\r\n                        {formFields}\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport const Admin = connect(mapStateToProps, null)(AdminBasic);\r\n","export const newPost_url = 'https://sm-fs-express.herokuapp.com/internship/'","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport {Login} from './index';\r\nimport { Home } from './Home/HomeComponent';\r\nimport { NavComponent } from './Navigation';\r\nimport { Admin } from './Admin'\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    jwt_token: state.user.jwt_token\r\n});\r\n\r\ninterface IProps {\r\n    isLoggedIn?: boolean;\r\n    jwt_token?: string;\r\n}\r\n\r\nconst MainBasic = (props: IProps) => {\r\n    console.log(\"main login: \",  props.isLoggedIn);\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <Router>\r\n            <NavComponent isLoggedIn = {props.isLoggedIn}/>\r\n                <Switch>\r\n                    <Route exact path={'/'} component={Home}/>\r\n                    <Route exact path={'/login'} component={Login}/>\r\n                    {props.jwt_token ? \r\n                        <Route exact path={'/admin'} component={Admin}/>\r\n                        : null}\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </Router>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport const Main = connect(mapStateToProps, null)(MainBasic);\r\n\r\n","import React from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport {login_url, signup_url} from './constants';\r\n\r\nimport './styles.css';\r\nimport { connect } from 'react-redux';\r\nimport { loginAction } from '../../redux/ActionCreators';\r\n\r\ninterface IProps {\r\n    login?: any;\r\n    history?: any;\r\n}\r\n\r\ninterface IState {\r\n    username: string | null;\r\n    password: string | null;\r\n    isSignupForm: boolean;\r\n    passwordError: boolean;\r\n    usernameExists: boolean;\r\n    badCredentials: boolean;\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    isLoggedIn: state.user.isLoggedIn\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    login: (token: string) => dispatch(loginAction(token))\r\n});\r\n\r\nclass LoginBasic extends React.Component<IProps, IState> {\r\nconstructor(props: IProps){\r\n    super(props);\r\n    this.state={\r\n        username: null,\r\n        password: null,\r\n        isSignupForm: false,\r\n        passwordError: false,\r\n        usernameExists: false,\r\n        badCredentials: false\r\n    }\r\n}\r\n\r\nhandleChange = (e: any) => {  \r\n    if(e.target.id === \"username\"){\r\n        return this.setState({username: e.target.value, usernameExists: false});\r\n    }\r\n    else if(e.target.id === \"password\"){\r\n        return this.setState({password: e.target.value, passwordError: true});\r\n    }\r\n    else if(e.target.id === \"confirm_password\"){\r\n        if(e.target.value === this.state.password){\r\n            this.setState({passwordError: false});\r\n        }\r\n        else{\r\n            this.setState({passwordError: true});\r\n        }\r\n    }\r\n}\r\n\r\nasync handleClick (action: string) {\r\n    \r\n    console.log(\"action: \", action);\r\n    if(action === 'login'){\r\n        await axios.post(login_url,{\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }).then(res => {\r\n            if(res.data.success){\r\n                this.props.login(res.data.token);\r\n                this.props.history.push('/');\r\n            }\r\n            console.log(\"response:\", res.data.token);\r\n        }).catch(err => {\r\n            if(err.response && err.response.status === 401){\r\n                this.setState({badCredentials: true})\r\n            }\r\n        });\r\n    } else if(action === 'signup'){\r\n        await axios.post(signup_url,{\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }).then(res => {\r\n            console.log(\"response: \", res);\r\n        }).catch(err => {\r\n            console.log(\"code: \", err.response.status);\r\n            if(err.response && err.response.status === 409){\r\n                this.setState({usernameExists: true})\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nrender(){\r\n    const LoginButton = (\r\n        <Button onClick={() => this.handleClick('login')}>\r\n            Login\r\n        </Button>\r\n    );\r\n    const SignupButton = (\r\n        <Button disabled={this.state.passwordError || this.state.password?.length === 0 || !this.state.password} onClick={() => this.handleClick('signup')}>\r\n            Signup\r\n        </Button>\r\n    );\r\n\r\n    const PassConfirm_Field = (\r\n        <Form.Group>\r\n            <Form.Label>Confirm Password: </Form.Label>\r\n            <Form.Control onChange={this.handleChange} id=\"confirm_password\" type=\"password\" placeholder=\"Confirm Password\"/>\r\n            {this.state.passwordError ? <Form.Text> Passwords should match</Form.Text> : null}\r\n        </Form.Group>\r\n    );\r\n\r\n    return(\r\n        <Container>\r\n            <h3 style={{textAlign:\"center\", marginBottom:\"20px\", marginTop:\"20px\"}}>{this.state.isSignupForm ? \"Signup for a new account:\" : \"Login with your account:\"} </h3>\r\n            <div className=\"formContainer mx-auto\">\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Email: </Form.Label>\r\n                        <Form.Control id=\"username\" onChange={this.handleChange} type='email' placeholder=\"Enter your email\" style={{width: \"30vw\", minWidth:\"300px\"}}/>\r\n                        <Form.Text hidden={!this.state.usernameExists}>Username taken please try another one.</Form.Text>\r\n                        <Form.Text hidden={!this.state.badCredentials}>Wrong Username/Password</Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password: </Form.Label>\r\n                        <Form.Control id=\"password\" onChange={this.handleChange} type='password' placeholder=\"Password\" style={{width: \"30vw\", minWidth: \"300px\"}} />\r\n                    </Form.Group>\r\n                    {this.state.isSignupForm ? PassConfirm_Field : null}\r\n                    <Form.Group>\r\n                        {this.state.isSignupForm ? SignupButton : LoginButton}\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                    <div style={{textAlign:\"center\"}}>\r\n                        {this.state.isSignupForm ? <a href='#' onClick={() => this.setState({isSignupForm: !this.state.isSignupForm, badCredentials: false})}>Already a member? Login</a> : <a href=\"#\" onClick={() => this.setState({isSignupForm: !this.state.isSignupForm, badCredentials: false})}>Signup</a>}\r\n                    </div>\r\n                    </Form.Group>\r\n                </Form>\r\n                \r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n    \r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(LoginBasic);","export const login_url = 'https://sm-fs-express.herokuapp.com/admin/login';\r\nexport const signup_url = 'https://sm-fs-express.herokuapp.com/admin/signup';","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const User = (\r\n    state = {\r\n        isLoggedIn: false,\r\n        jwt_token: null\r\n    },\r\n    action: any\r\n) => {\r\n    switch(action.type){\r\n        case ActionTypes.LOGIN_ACTION:{\r\n            console.log(\"set token: \", action.payload);\r\n            \r\n            return {...state, isLoggedIn: true, jwt_token: action.payload};\r\n        }\r\n            \r\n        case ActionTypes.LOGOUT_ACTION:{\r\n            console.log(\"logout\");\r\n            return {...state, isLoggedIn: false, jwt_token: null}\r\n            \r\n        }\r\n           \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport {Main} from './Components'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/ConfigureStore';\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Main/>\n    </Provider>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers} from 'redux';\r\nimport {User} from './reducers/User';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            user: User,\r\n\r\n        })\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}